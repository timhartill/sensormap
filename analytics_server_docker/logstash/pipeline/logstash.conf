input {
	tcp {
		port => 5000
		type => "tcp5000"
	}
	kafka {
		type => "metromind-start"
		consumer_threads => 2
		topics => ["metromind-start"]
		decorate_events => true
		codec => "plain"
		key_deserializer_class => "org.apache.kafka.common.serialization.StringDeserializer"
		bootstrap_servers => "kafka:9092"
	}
    kafka {
		type => "metromind-raw"
		consumer_threads => 2
		topics => ["metromind-raw"]
		decorate_events => true
		codec => "plain"
		key_deserializer_class => "org.apache.kafka.common.serialization.StringDeserializer"
		bootstrap_servers => "kafka:9092"
	}
    kafka {
		type => "metromind-anomaly"
		consumer_threads => 1
		topics => ["metromind-anomaly"]
		decorate_events => true
		codec => "plain"
		key_deserializer_class => "org.apache.kafka.common.serialization.StringDeserializer"
		bootstrap_servers => "kafka:9092"
	}

}

## Add your filters / logstash plugins configuration here

filter {       
        json { source => "message" }
        
		if [type] == "metromind-anomaly" {
			fingerprint {
				method => "SHA1"
				key => "HMAC"
				source => [ "@timestamp" ]
				target => "Id"
			}
		}
        grok {
            match => ["@timestamp", "%{YEAR:[@metadata][year]}-%{MONTHNUM:[@metadata][month]}-%{MONTHDAY:[@metadata][day]}T%{GREEDYDATA}"]
        }

        mutate {
	        remove_field => ["kafka", "message"]
        }        
}


output {
	if [type] == "tcp5000" {
		elasticsearch {
			hosts => "elasticsearch:9200"
		}
	}
  	if [type] == "metromind-start"  or  [type] == "metromind-raw" {
      
        elasticsearch {
            hosts => "elasticsearch:9200"
            index => "%{type}-day2-%{[@metadata][year]}-%{[@metadata][month]}"
            document_type => "logs"            
            retry_max_interval => 10
            action => "index"
            timeout => 60
        }
    
   }else {
        elasticsearch {
            hosts => "elasticsearch:9200"
            index => "%{type}-day2-%{[@metadata][year]}-%{[@metadata][month]}"
            document_type => "logs"           
            retry_max_interval => 10
            action => "index"
            document_id => "%{Id}"
            timeout => 60
        }
    }
}
